[{ "id": "709dfa98.ed513c", "type": "comment", "z": "cc5d6615.0e777", "name": "Chatbot Init", "info": "Initalize the chatbot", "x": 91, "y": 24.75, "wires": [] }, { "id": "769c2906.b3e9c8", "type": "inject", "z": "cc5d6615.0e777", "name": "Inject a 'bot' user response", "topic": "", "payload": "", "payloadType": "date", "repeat": "", "crontab": "", "once": false, "x": 281, "y": 292, "wires": [
        ["d1259f12.357c2"]
    ] }, { "id": "d1259f12.357c2", "type": "function", "z": "cc5d6615.0e777", "name": "Test Message", "func": "msg.payload = {\n    \"message\":(new Date(msg.payload)).toUTCString(),\n    \"user\":\"bot\"\n    \n}\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 519, "y": 292, "wires": [
        ["ddb73b4d.b0405"]
    ] }, { "id": "ddb73b4d.b0405", "type": "ui_template", "z": "cc5d6615.0e777", "group": "6a525999.446638", "name": "", "order": 2, "width": "10", "height": "8", "format": "<style>\n    #chat-box {\n        overflow-y: scroll;\n    }\n    .chat-message {\n        border-bottom: 1px solid #fff;\n    }\n    .chat-user {\n        padding: 5px 5px;\n        display: inline-block;\n        width: 50px;\n        vertical-align: top;\n    }\n    .chat-user-you {\n        background: #fac172;\n    }\n    .chat-user-bot {\n        background: #808000;\n    }\n    .chat-user-alexa {\n        background: #800000;\n    }\n    .chat-user-tjbot {\n        background: #89D5C9;\n    }\n    .chat-data {\n        padding: 5px 5px;\n        width: calc(100% - 80px);\n        display: inline-block;\n        vertical-align: top;\n        background: rgba(255,255,255,0.4);\n    }\n</style>\n<div id=\"chat-box\">\n    \n</div>\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            if (data.user && data.message) {\n                var entry = $('<div>',{class:'chat-message'}).addClass('chat-user-'+data.user);\n                $('<span class=\"chat-user\"></span>').text(data.user).appendTo(entry);\n                $('<span class=\"chat-data\"></span>').text(data.message).appendTo(entry);\n                entry.appendTo('#chat-box');\n                $(\"#chat-box\").scrollTop($('#chat-box').prop(\"scrollHeight\"));\n            }\n        })\n    })(scope);\n</script>", "storeOutMessages": true, "fwdInMessages": true, "templateScope": "local", "x": 734, "y": 393, "wires": [
        []
    ] }, { "id": "84b79d86.dc6a2", "type": "function", "z": "cc5d6615.0e777", "name": "Handle message", "func": "var msg2 = null;\nif (msg.payload !== '') {\n    // If this is a non-blank message, send a\n    // message back to the text input to clear\n    // it\n    msg2 = {socketid: msg.socketid, payload:''};\n}\n\nif (msg.chatbot === true) {\n    msg.payload = {\n        message: msg.payload,\n        user: \"tjbot\"\n    };\n} else {\n    msg.payload = {\n        message: msg.payload,\n        user: \"you\"\n    };\n}\nreturn [msg, msg2];", "outputs": "2", "noerr": 0, "x": 476, "y": 401, "wires": [
        ["ddb73b4d.b0405"],
        ["bbfce69e.81463"]
    ] }, { "id": "fdd3526d.23689", "type": "ui_text", "z": "cc5d6615.0e777", "group": "6a525999.446638", "order": 3, "width": "1", "height": "1", "name": "", "label": "Chat", "format": "", "layout": "row-left", "x": 1020, "y": 187, "wires": [] }, { "id": "bbfce69e.81463", "type": "delay", "z": "cc5d6615.0e777", "name": "Wait", "pauseType": "delay", "timeout": "10", "timeoutUnits": "milliseconds", "rate": "1", "nbRateUnits": "1", "rateUnits": "second", "randomFirst": "1", "randomLast": "5", "randomUnits": "seconds", "drop": false, "x": 225, "y": 471, "wires": [
        ["f704ed49.ce9a5"]
    ] }, { "id": "f704ed49.ce9a5", "type": "ui_text_input", "z": "cc5d6615.0e777", "name": "chat input", "label": "", "group": "6a525999.446638", "order": 4, "width": "9", "height": "1", "passthru": false, "mode": "text", "delay": "0", "topic": "", "x": 388, "y": 471, "wires": [
        ["ba72363.1a37f48", "2bff866c.065b52"]
    ] }, { "id": "e7fcb45e.2bf4c8", "type": "ibmiot out", "z": "cc5d6615.0e777", "authentication": "boundService", "apiKey": "", "outputType": "cmd", "deviceId": "TjBot", "deviceType": "TjBot", "eventCommandType": "set-light", "format": "json", "data": "{}", "qos": 0, "name": "IBM IoT", "service": "registered", "x": 420, "y": 1036, "wires": [] }, { "id": "27fbc7f2.f7fc68", "type": "comment", "z": "cc5d6615.0e777", "name": "Chatbot Receiver", "info": "Gets any message from the chat-ui and sends \nit to the conversation service", "x": 102.5, "y": 654, "wires": [] }, { "id": "2910de1b.a91662", "type": "watson-conversation-v1", "z": "cc5d6615.0e777", "name": "EN Conv", "workspaceid": "5d37ed79-5aab-4393-9dde-4156dc048074", "multiuser": false, "context": false, "default-endpoint": true, "service-endpoint": "https://gateway.watsonplatform.net/conversation/api", "x": 488.5, "y": 724, "wires": [
        ["3d4d2ea3.4b624a", "5a68c79e.68e8e"]
    ] }, { "id": "cef6de34.513758", "type": "debug", "z": "cc5d6615.0e777", "name": "Send Message", "active": true, "console": "false", "complete": "payload", "x": 245, "y": 355.25, "wires": [] }, { "id": "829b5071.80bf58", "type": "debug", "z": "cc5d6615.0e777", "name": "", "active": true, "console": "false", "complete": "false", "x": 424.5, "y": 1213, "wires": [] }, { "id": "9e08afcd.6a82", "type": "function", "z": "cc5d6615.0e777", "name": "Get LatLong", "func": "var latlong;\nvar session = flow.get(\"session\");\nvar lang = flow.get(\"lang\");\n\nmsg.oldpayload = msg.payload;\n\nmsg.weather=false;\nfor (var v in session.latlong) {\n    if (session.latlong[v].city === session.context.city) {\n        latlong = session.latlong[v].latlong;\n        msg.weather = true;\n    }\n}\n\nmsg.language = lang;\n\nmsg.location = latlong;\nmsg.payload = latlong;\n\nreturn msg;", "outputs": "1", "noerr": 0, "x": 214.5, "y": 1262, "wires": [
        ["829b5071.80bf58", "ac01a517.d9cbc8"]
    ] }, { "id": "e4e2687f.dbfd7", "type": "weather_insights", "z": "cc5d6615.0e777", "name": "Forecast", "host": "twcservice.mybluemix.net", "service": "/forecast/daily/10day.json", "geocode": "", "units": "m", "language": "", "x": 473.5, "y": 1323, "wires": [
        ["ef58fef7.e3b8e"]
    ] }, { "id": "ac01a517.d9cbc8", "type": "switch", "z": "cc5d6615.0e777", "name": "Weather?", "property": "weather", "propertyType": "msg", "rules": [{ "t": "false" }, { "t": "true" }], "checkall": "true", "outputs": 2, "x": 416.5, "y": 1262, "wires": [
        ["d9718a2f.341ed"],
        ["e4e2687f.dbfd7"]
    ] }, { "id": "ef58fef7.e3b8e", "type": "function", "z": "cc5d6615.0e777", "name": "Parse Weather", "func": "var session = flow.get(\"session\");\nvar lang = flow.get(\"lang\");\nvar weatherpayload = msg.payload;\nvar weathertext = \"\";\nvar code;\nvar weather = msg.forecasts;\n\n\nif (lang == \"en\") { \n    msg.voice = \"en-GB_KateVoice\";\n    weathertext = \"The Weather in \";\n    weathertext = weathertext + session.context.city + \" will be on \";\n}\nif (lang == \"de\") { \n    msg.voice = \"de-DE_BirgitVoice\";\n    weathertext = \"Das Wetter in \";\n    weathertext = weathertext + session.context.city + \" wird am \";\n}\n\nif (weather.length > 0 ) {\n    var notfound = true;\n    var i = 0;\n    while (i< weather.length && notfound) {\n        if(weather[i].fcst_valid_local.substring(0,10) == session.context.date) {\n            notfound = false;\n        } else {\n            i = i + 1;\n        }\n    }\n    \n    if (notfound) {\n        i = 0;\n    }\n    var narrative = weather[i].narrative; \n    var dow = weather[i].dow;\n    weathertext = weathertext + dow + \" \" + narrative;\n    if (typeof weather[i].day !== \"undefined\") {\n        code = weather[i].day.icon_code;\n    } else if (typeof weather[i].night !== \"undefined\") {\n        code = weather[i].night.icon_code;\n    }\n} else {\n    weathertext = \"No Weather found!\";\n}\n\n// Test RegEx\nvar newweather = weathertext;\nvar reg = weathertext.match(/(?:\\d*\\.)?\\d+([A-C])/g);\nfor (var v=0; v < reg.length; v++) {\n    var str = \"\";\n    if (lang == \"de\") {\n        str = reg[v].slice(0,reg[v].length-1) + \" Grad\";\n    } else {\n        str = reg[v].slice(0,reg[v].length-1) + \" degrees\";\n    }\n    newweather = newweather.replace(reg[v],str);\n}\n\n// save to context\nsession.context.weathertext = newweather;\nsession.context.weathercode = code;\nsession.output.push(newweather);\n\nmsg.additional_context = {\n//    context : {\n        weather : weathertext,\n        uv : msg.forecasts[0].uv_desc,\n        temp : msg.forecasts[0].temp\n//    }\n};\n\nflow.set(\"session\", session);\n\n// restore old payload elements\nmsg.payload = msg.oldpayload;\nmsg.session = session;\nmsg.forecasts = weather;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 658.5, "y": 1323, "wires": [
        ["183c4eb4.037931", "964f45b.08e21b8", "707abbff.948cdc"]
    ] }, { "id": "d9718a2f.341ed", "type": "function", "z": "cc5d6615.0e777", "name": "Restore", "func": "msg.payload = msg.oldpayload;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 607.5, "y": 1255, "wires": [
        ["183c4eb4.037931"]
    ] }, { "id": "cd34e479.ef5a68", "type": "change", "z": "cc5d6615.0e777", "name": "Update payload", "rules": [{ "t": "set", "p": "discoveryparams.query", "pt": "msg", "to": "payload.input.text", "tot": "msg" }], "action": "", "property": "", "from": "", "to": "", "reg": false, "x": 250.00000095367432, "y": 1623.0000109672546, "wires": [
        ["4d9421d8.92bb6"]
    ] }, { "id": "4d9421d8.92bb6", "type": "watson-discovery-v1", "z": "cc5d6615.0e777", "name": "Discovery", "environmentname": "", "environment_id": "bd82267f-9072-4fb5-87c8-702290f19dba", "collection_id": "849081ac-432d-4f4b-900b-20743e48e694", "configurationname": "", "configuration_id": "", "collection_name": "", "count": "1", "passages": false, "nlp_query": false, "query": "", "filter": "", "aggregation": "", "return": "", "description": "", "size": 0, "discovery-method": "query", "x": 439.0000009536743, "y": 1623.0000109672546, "wires": [
        ["dbace6e6.4f6988"]
    ] }, { "id": "dbace6e6.4f6988", "type": "function", "z": "cc5d6615.0e777", "name": "Postprocessing", "func": "var question = msg.search_results.results[0].Question\nvar answer = msg.search_results.results[0].Answer\nvar score = msg.search_results.results[0].score\n\nmsg.payload = 'I found this question that is similar to yours (confidence ' + score.toFixed(2) + '): ' + question;\nnode.send(msg);\n\nmsg.payload = 'And this is the answer: ' + answer;\nnode.send(msg);\n\nreturn ;", "outputs": 1, "noerr": 0, "x": 643.0000009536743, "y": 1623.0000109672546, "wires": [
        ["39403a31.c586ce", "9ce8dc53.4491b"]
    ] }, { "id": "14406b8e.d68cdc", "type": "link out", "z": "cc5d6615.0e777", "name": "Sender", "links": ["c64aa6f2.ebcae8"], "x": 1189.5, "y": 776, "wires": [] }, { "id": "c64aa6f2.ebcae8", "type": "link in", "z": "cc5d6615.0e777", "name": "Sender", "links": ["14406b8e.d68cdc", "9ce8dc53.4491b", "183c4eb4.037931", "b7dd348e.708c9", "57b7f689.06215"], "x": 66, "y": 401.25, "wires": [
        ["cef6de34.513758", "3212a04f.9a87d8"]
    ] }, { "id": "f9cc270f.e4226", "type": "link out", "z": "cc5d6615.0e777", "name": "Discovery", "links": ["bbb5a2fe.ae999"], "x": 1123.5, "y": 820, "wires": [] }, { "id": "bbb5a2fe.ae999", "type": "link in", "z": "cc5d6615.0e777", "name": "Discovery", "links": ["f9cc270f.e4226"], "x": 86, "y": 1623, "wires": [
        ["cd34e479.ef5a68"]
    ] }, { "id": "39403a31.c586ce", "type": "debug", "z": "cc5d6615.0e777", "name": "", "active": true, "console": "false", "complete": "payload", "x": 869.0000114440918, "y": 1556.7500114440918, "wires": [] }, { "id": "9ce8dc53.4491b", "type": "link out", "z": "cc5d6615.0e777", "name": "Sender", "links": ["c64aa6f2.ebcae8"], "x": 811.0000009536743, "y": 1623.0000109672546, "wires": [] }, { "id": "696e23a5.a985a4", "type": "comment", "z": "cc5d6615.0e777", "name": "Discovery Questions", "info": "", "x": 110.75, "y": 1568.25, "wires": [] }, { "id": "2f980156.6ef0be", "type": "link out", "z": "cc5d6615.0e777", "name": "Chatbot", "links": ["a61ff6fc.8dbfc8"], "x": 703, "y": 517.5, "wires": [] }, { "id": "a61ff6fc.8dbfc8", "type": "link in", "z": "cc5d6615.0e777", "name": "Chatbot", "links": ["2f980156.6ef0be", "c7c805c8.240ad", "b58b90ca.7de428"], "x": 72, "y": 750.25, "wires": [
        ["50bf85aa.1a91ac"]
    ] }, { "id": "ba72363.1a37f48", "type": "change", "z": "cc5d6615.0e777", "name": "chatbot", "rules": [{ "t": "set", "p": "chatbot", "pt": "msg", "to": "false", "tot": "bool" }], "action": "", "property": "", "from": "", "to": "", "reg": false, "x": 558, "y": 470.75, "wires": [
        ["84b79d86.dc6a2"]
    ] }, { "id": "25e27f73.141f6", "type": "inject", "z": "cc5d6615.0e777", "name": "Init", "topic": "", "payload": "Hello", "payloadType": "str", "repeat": "", "crontab": "", "once": true, "x": 116, "y": 75.25, "wires": [
        ["ed9d3377.6b79a8"]
    ] }, { "id": "858ff274.8468a", "type": "comment", "z": "cc5d6615.0e777", "name": "Coversation Action", "info": "", "x": 594, "y": 655.75, "wires": [] }, { "id": "d4929dfe.600d5", "type": "switch", "z": "cc5d6615.0e777", "name": "", "property": "session.action", "propertyType": "flow", "rules": [{ "t": "eq", "v": "greeting", "vt": "str" }, { "t": "eq", "v": "turn_off", "vt": "str" }, { "t": "eq", "v": "turn_on", "vt": "str" }, { "t": "eq", "v": "get_hum", "vt": "str" }, { "t": "eq", "v": "get_temp", "vt": "str" }, { "t": "eq", "v": "discover", "vt": "str" }, { "t": "eq", "v": "get_weather", "vt": "str" }, { "t": "else" }], "checkall": "true", "outputs": 8, "x": 883, "y": 800.75, "wires": [
        ["339acae5.620466"],
        ["4e62e600.36d44c"],
        ["4e62e600.36d44c"],
        ["14406b8e.d68cdc"],
        ["14406b8e.d68cdc"],
        ["f9cc270f.e4226"],
        ["5e120db3.fc401c"],
        ["14406b8e.d68cdc"]
    ] }, { "id": "8178aa46.c36588", "type": "debug", "z": "cc5d6615.0e777", "name": "ConvParser", "active": true, "console": "false", "complete": "true", "x": 900, "y": 677.5, "wires": [] }, { "id": "ed9d3377.6b79a8", "type": "change", "z": "cc5d6615.0e777", "name": "default Lang", "rules": [{ "t": "set", "p": "payload", "pt": "msg", "to": "de", "tot": "str" }, { "t": "set", "p": "lang", "pt": "flow", "to": "payload", "tot": "msg" }], "action": "", "property": "", "from": "", "to": "", "reg": false, "x": 298, "y": 75, "wires": [
        ["ddeca8b7.8ee86"]
    ] }, { "id": "ddeca8b7.8ee86", "type": "ui_dropdown", "z": "cc5d6615.0e777", "name": "Language", "label": "Language", "place": "Select option", "group": "6a525999.446638", "order": 1, "width": 0, "height": 0, "passthru": true, "options": [{ "label": "de", "value": "de", "type": "str" }, { "label": "en", "value": "en", "type": "str" }], "payload": "", "topic": "", "x": 486, "y": 75.25, "wires": [
        ["2c89427b.1e9136"]
    ] }, { "id": "2c89427b.1e9136", "type": "change", "z": "cc5d6615.0e777", "name": "set lang", "rules": [{ "t": "set", "p": "lang", "pt": "flow", "to": "payload", "tot": "msg" }], "action": "", "property": "", "from": "", "to": "", "reg": false, "x": 650, "y": 75.5, "wires": [
        ["ddb9ca7b.32adf", "e52942c1.b783f"]
    ] }, { "id": "ddb9ca7b.32adf", "type": "debug", "z": "cc5d6615.0e777", "name": "ChatBot Lang", "active": false, "console": "false", "complete": "payload", "x": 836, "y": 75.5, "wires": [] }, { "id": "c7c805c8.240ad", "type": "link out", "z": "cc5d6615.0e777", "name": "", "links": ["a61ff6fc.8dbfc8"], "x": 830, "y": 136.5, "wires": [] }, { "id": "e52942c1.b783f", "type": "function", "z": "cc5d6615.0e777", "name": "Init Chatbot", "func": "// insert the supported cities\nvar latlong = [];\nvar cities = [];\nvar conv;\n\nlatlong.push ({ \"city\" : \"Linz\", \"latlong\": \"48.2950649,14.0527468\" });\nlatlong.push ({ \"city\": \"Wien\", \"latlong\": \"48.2206849,16.3800599\"});\nlatlong.push ({ \"city\": \"Vienna\", \"latlong\": \"48.2206849,16.3800599\"});\nlatlong.push ({ \"city\": \"Graz\", \"latlong\": \"47.0735897,15.4417898\"});\nlatlong.push ({ \"city\": \"Salzburg\", \"latlong\": \"47.80281,13.05643\"});\nlatlong.push ({ \"city\": \"Bregenz\", \"latlong\": \"47.50708,9.7519903\"});\nlatlong.push ({ \"city\": \"Innsbruck\", \"latlong\": \"47.2854551,11.37879\"});\nlatlong.push ({ \"city\": \"Klagenfurt\", \"latlong\": \"46.641325,14.312755\"});\nlatlong.push ({ \"city\": \"St. Pölten\",\"latlong\": \"48.19378,15.647015\"});\nlatlong.push ({ \"city\": \"Eisenstadt\",\"latlong\": \"47.838855,16.5343751\"});\nlatlong.push ({ \"city\": \"München\",\"latlong\": \"48.135125,11.581981\"});\nlatlong.push ({ \"city\": \"Berlin\",\"latlong\": \"52.520007,13.404954\"});\nlatlong.push ({ \"city\": \"Hamburg\",\"latlong\": \"53.551085,9.993682\"});\n\nfor (var i=0; i<latlong.length; i++) {\n    cities.push(latlong[i].city);\n}\n\n// new session params \nvar session = {\n    \"latlong\" : latlong, \n    \"cities\" : cities,\n    \"action\" : \"\",\n    \"output\" : \"\",\n    \"context\" : {\n        \"cities\" : cities,\n        \"temp\" : \"-.-\",\n        \"hum\" : \"-%\", \n        \"city\" : null,\n        \"when\" : null,\n        \"date\" : null, \n        \"day\" : null,\n        \"light\" : \"\",\n        \"colour\" : null\n    }\n}\n\n// save the session\nflow.set(\"conversation\", conv);\nflow.set(\"session\", session);\n\n// default\nmsg.payload = \"Hi\";\nreturn msg;", "outputs": 1, "noerr": 0, "x": 684, "y": 135.75, "wires": [
        ["c7c805c8.240ad", "2e6ecd05.637f3a"]
    ] }, { "id": "8a2e887d.dce1d8", "type": "comment", "z": "cc5d6615.0e777", "name": "Chatbot UI", "info": "User Interface for the Chatbot - based on NodeRedUI", "x": 81, "y": 244, "wires": [] }, { "id": "c3b7b819.66be", "type": "comment", "z": "cc5d6615.0e777", "name": "Action Weather", "info": "Enhance the output with the Weather informations", "x": 102, "y": 1183, "wires": [] }, { "id": "50bf85aa.1a91ac", "type": "function", "z": "cc5d6615.0e777", "name": "rest conv", "func": "// get the flow params\nvar conversation = flow.get(\"conversation\");\nvar session = flow.get(\"session\");\n\nsession.context.temp = global.get(\"temp\") || \"-.-\";\nsession.context.hum = global.get(\"hum\") || \"-%\";\nvar params = session.context;\n\n// set params for the next conversation\nif (conversation) {\n    params = {\n        \"context\" : conversation.context\n    };\n    \n    params.context.cities = session.context.cities;\n    params.context.temp = session.context.temp;\n    params.context.colour = session.context.colour;\n    params.context.hum = session.context.hum;\n    params.context.city = session.context.city;\n    params.context.when = session.context.when;\n} \n\n// insert here the additional infos for the parm\n// session.city\n// session.temp\n// session.when\n// session.hum\n\n// save new values     \nmsg.params = params;\n\n// save the new session params\nflow.set(\"session\", session);\nmsg.session = session;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 184, "y": 750, "wires": [
        ["1067b99c.0ee2d6", "6843ee78.233a8"]
    ] }, { "id": "1067b99c.0ee2d6", "type": "debug", "z": "cc5d6615.0e777", "name": "before conv", "active": true, "console": "false", "complete": "true", "x": 361, "y": 685.5, "wires": [] }, { "id": "2bff866c.065b52", "type": "change", "z": "cc5d6615.0e777", "name": "Bot Answer", "rules": [{ "t": "set", "p": "answer", "pt": "msg", "to": "true", "tot": "bool" }], "action": "", "property": "", "from": "", "to": "", "reg": false, "x": 570, "y": 516.75, "wires": [
        ["2f980156.6ef0be"]
    ] }, { "id": "3d4d2ea3.4b624a", "type": "function", "z": "cc5d6615.0e777", "name": "parse conv", "func": "// get the current session\nvar session = flow.get(\"session\");\nvar lang = flow.get(\"lang\");\n\n// save conversation\nflow.set(\"conversation\", msg.payload);\n\n// save output textmessages\nsession.output = msg.payload.output.text;\n\n// init working variables\nvar intent;\nif (msg.payload.intents && msg.payload.intents.length) {\n    intent = msg.payload.intents[0].intent;\n} else {\n    intent = \"\";\n}\nvar entities = msg.payload.entities;\n\n// save special context\n// msg.discover = msg.payload.context.discovery;\n\n// parse entities and set vars\nif (entities && entities.length){\n    for (var i = 0;i < entities.length;i++) {\n        switch (entities[i].entity) {\n            case \"city\":\n                intent = \"get_weather\";\n                session.context.city = entities[i].value;\n                break;\n            case \"sys-date\":\n                intent = \"get_weather\";\n                session.context.date = entities[i].value;\n                break;\n            case \"day\":\n                intent = \"get_weather\";\n                session.context.day = entities[i].value;\n                break;\n            case \"colour\":\n                intent = \"turn_on\";\n                session.context.colour = entities[i].value;\n                break;\n            default:\n                break;\n        }\n    }\n}\n\n// define aditional values\nswitch (intent) {\n    case \"greeting\":\n        session.action = \"greeting\";\n        break;\n    case \"turn_off\":\n        session.action = \"turn_off\";\n        if (lang == \"de\") {\n            session.output.push(\"Klar. Ich habe das Licht ausgeschaltet.\");\n        } else {\n            session.output.push(\"Ok. The lights are turned off now.\");\n        }\n        break;\n    case \"turn_on\":\n        if (session.context.colour) {\n            session.action = \"turn_on\";\n            if (lang == \"de\") {\n                session.output.push(\"Gerne. Das Licht mit der Farbe \" + session.context.colour + \" ist nun für Sie eingeschaltet.\");\n            } else {\n                session.output.push(\"Fine. The \" + session.context.colour + \" light is now switched on.\");\n            }\n        } else {\n            session.action = \"\";\n        }\n        break;\n    case \"get_temp\":\n        session.action = \"get_temp\";\n        break;\n    case \"get_hum\":\n        session.action = \"get_hum\";\n        break;\n    case \"get_weather\":\n        if (session.context.city) {\n            if (session.context.day || session.context.date) {\n            session.action = \"get_weather\";\n            } else {\n            session.action = \"next_question\";\n            }\n        } else {\n            session.action = \"next_question\";\n        }\n        break;\n    default:\n        break;\n}\n\nflow.set(\"session\", session);\n\n// enhance msg object\nmsg.intent = intent;\nmsg.session = session;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 677, "y": 724, "wires": [
        ["8178aa46.c36588", "d4929dfe.600d5"]
    ] }, { "id": "2e6ecd05.637f3a", "type": "change", "z": "cc5d6615.0e777", "name": "Clear", "rules": [{ "t": "set", "p": "payload", "pt": "msg", "to": "", "tot": "str" }], "action": "", "property": "", "from": "", "to": "", "reg": false, "x": 867, "y": 186.75, "wires": [
        ["fdd3526d.23689"]
    ] }, { "id": "3212a04f.9a87d8", "type": "function", "z": "cc5d6615.0e777", "name": "Postprocessing", "func": "var session = flow.get(\"session\");\nvar output = session.output;\n\n// send out all text messages\nfor (var t in output) {\n    msg.payload = output[t];\n    msg.chatbot = true;\n    node.send(msg);\n}\n\nreturn ;", "outputs": 1, "noerr": 0, "x": 223, "y": 401, "wires": [
        ["84b79d86.dc6a2"]
    ] }, { "id": "8f092967.4f582", "type": "link in", "z": "cc5d6615.0e777", "name": "Weather", "links": ["5e120db3.fc401c"], "x": 78, "y": 1261.25, "wires": [
        ["9e08afcd.6a82"]
    ] }, { "id": "5e120db3.fc401c", "type": "link out", "z": "cc5d6615.0e777", "name": "Weather", "links": ["8f092967.4f582", "b4a2a4fc.5a1b28"], "x": 1125, "y": 860.5, "wires": [] }, { "id": "183c4eb4.037931", "type": "link out", "z": "cc5d6615.0e777", "name": "", "links": ["c64aa6f2.ebcae8"], "x": 804, "y": 1256.5, "wires": [] }, { "id": "964f45b.08e21b8", "type": "debug", "z": "cc5d6615.0e777", "name": "Weather out", "active": true, "console": "false", "complete": "true", "x": 863, "y": 1322.5, "wires": [] }, { "id": "339acae5.620466", "type": "function", "z": "cc5d6615.0e777", "name": "reset", "func": "var session = flow.get(\"session\");\n\nsession.context.city = null;\nsession.context.colour = null;\n\nflow.set(\"session\", session);\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 1058, "y": 729.75, "wires": [
        ["14406b8e.d68cdc"]
    ] }, { "id": "5a68c79e.68e8e", "type": "debug", "z": "cc5d6615.0e777", "name": "after conv", "active": true, "console": "false", "complete": "true", "x": 667, "y": 778.5, "wires": [] }, { "id": "d1bf8f3e.45c1d", "type": "watson-conversation-v1", "z": "cc5d6615.0e777", "name": "DE Conv", "workspaceid": "03543a5d-b3cd-40b4-8406-86826a5ff4f2", "multiuser": false, "context": false, "default-endpoint": true, "service-endpoint": "https://gateway.watsonplatform.net/conversation/api", "x": 486.5, "y": 778, "wires": [
        ["5a68c79e.68e8e", "3d4d2ea3.4b624a"]
    ] }, { "id": "6843ee78.233a8", "type": "switch", "z": "cc5d6615.0e777", "name": "Language", "property": "lang", "propertyType": "flow", "rules": [{ "t": "eq", "v": "en", "vt": "str" }, { "t": "else" }], "checkall": "true", "outputs": 2, "x": 349, "y": 750, "wires": [
        ["2910de1b.a91662"],
        ["d1bf8f3e.45c1d"]
    ] }, { "id": "7840087f.ba42c", "type": "comment", "z": "cc5d6615.0e777", "name": "Action Light", "info": "Switch on / off and colour of the lights.", "x": 89, "y": 937, "wires": [] }, { "id": "f0175289.cfc73", "type": "link in", "z": "cc5d6615.0e777", "name": "Lights", "links": ["23a2f4e.2b7780c", "4e62e600.36d44c"], "x": 77, "y": 1000, "wires": [
        ["710e0002.62ab7", "b7dd348e.708c9"]
    ] }, { "id": "b7dd348e.708c9", "type": "link out", "z": "cc5d6615.0e777", "name": "Sender", "links": ["c64aa6f2.ebcae8"], "x": 495, "y": 1000, "wires": [] }, { "id": "710e0002.62ab7", "type": "function", "z": "cc5d6615.0e777", "name": "IoT Command", "func": "var session = flow.get(\"session\");\nvar IoTMsg = {\n    \"lang\" : flow.get(\"lang\"),\n    \"action\" : \"\",\n    \"colour\" : \"\"\n};\n\nswitch (session.action) {\n    case \"turn_off\":\n        IoTMsg.action = \"light_off\";\n        break;\n    case \"turn_on\":\n        IoTMsg.action = \"light_on\";\n        var colour = session.context.colour;\n        switch (colour) {\n            case \"blue\":\n            case \"blau\":\n                IoTMsg.colour = \"blue_light\";\n                break;\n            case \"red\":\n            case \"rot\":\n                IoTMsg.colour = \"red_light\";\n                break;\n            case \"green\":\n            case \"grün\":\n                IoTMsg.colour = \"green_light\";\n                break;\n            case \"yellow\":\n            case \"gelb\":\n                IoTMsg.colour = \"yellow_light\";\n                break;\n            case \"white\":\n            case \"weiß\":\n                IoTMsg.colour = \"white_light\";\n                break;\n            case \"orange\":\n                IoTMsg.colour = \"orange_light\";\n                break;\n            default: \n                IoTMsg.colour = \"no_light\";\n                break;\n        }\n        break;\n    default: \n        IoTMsg.action = \"light_off\";\n        IoTMsg.colour = \"no_light\";\n        break;\n}\n\nvar d = {\n    \"d\" : IoTMsg\n};\n\nmsg.payload = d;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 224, "y": 1036, "wires": [
        ["a0a2500c.e269e8", "e7fcb45e.2bf4c8"]
    ] }, { "id": "a0a2500c.e269e8", "type": "debug", "z": "cc5d6615.0e777", "name": "Light_Command", "active": true, "console": "false", "complete": "true", "x": 451, "y": 1093, "wires": [] }, { "id": "4e62e600.36d44c", "type": "link out", "z": "cc5d6615.0e777", "name": "", "links": ["f0175289.cfc73"], "x": 1031, "y": 769.5, "wires": [] }, { "id": "766c8a3f.d9096c", "type": "ibmiot out", "z": "cc5d6615.0e777", "authentication": "boundService", "apiKey": "", "outputType": "cmd", "deviceId": "TjBot", "deviceType": "TjBot", "eventCommandType": "talk", "format": "json", "data": "{}", "qos": 0, "name": "IBM IoT", "service": "registered", "x": 1059, "y": 1376, "wires": [] }, { "id": "707abbff.948cdc", "type": "function", "z": "cc5d6615.0e777", "name": "IoT Command", "func": "var session = flow.get(\"session\");\n\nvar IoTMsg = {\n    \"lang\" : flow.get(\"lang\"),\n    \"action\" : \"talk\",\n    \"weathercode\" : session.context.weathercode,\n    \"text\" : session.context.weathertext\n};\n\n\nvar d = {\n    \"d\" : IoTMsg\n};\n\nmsg.payload = d;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 863, "y": 1376, "wires": [
        ["db2d11d1.14d4c8", "766c8a3f.d9096c"]
    ] }, { "id": "db2d11d1.14d4c8", "type": "debug", "z": "cc5d6615.0e777", "name": "Talk_Command", "active": true, "console": "false", "complete": "true", "x": 1080, "y": 1433, "wires": [] }, { "id": "6a525999.446638", "type": "ui_group", "z": "", "name": "Chat Group", "tab": "f2b82e3.9a719d", "disp": false, "width": "10" }, { "id": "f2b82e3.9a719d", "type": "ui_tab", "z": "", "name": "TjBot Chat", "icon": "dashboard" }]