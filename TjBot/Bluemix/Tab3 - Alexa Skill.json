[{ "id": "25fadfd6.f7e0b", "type": "http in", "z": "ad6cefc7.a3ca5", "name": "Alexa Request", "url": "/Alexa", "method": "post", "swaggerDoc": "", "x": 90, "y": 174.4444580078125, "wires": [
        ["d5644496.2ef4b8", "6e5b00b5.34e6c"]
    ] }, { "id": "d5644496.2ef4b8", "type": "switch", "z": "ad6cefc7.a3ca5", "name": "Sort Request", "property": "payload.request.type", "propertyType": "msg", "rules": [{ "t": "eq", "v": "LaunchRequest", "vt": "str" }, { "t": "eq", "v": "IntentRequest", "vt": "str" }, { "t": "eq", "v": "SessionEndedRequest", "vt": "str" }, { "t": "else" }], "checkall": "true", "outputs": 4, "x": 291.1111145019531, "y": 174.5555419921875, "wires": [
        ["8566379f.f21038"],
        ["881c1545.dad0d8"],
        [],
        []
    ] }, { "id": "ba9b3798.5c25e", "type": "function", "z": "ad6cefc7.a3ca5", "name": "Set Params", "func": "// get the flow params\nvar conversation = flow.get(\"conversation\");\nvar session = flow.get(\"session\");\n\n// get infos from Alexa\nvar fname = msg.req.query.fname;\nvar workspace_id = msg.req.query.workspace_id;\nvar user_temp = msg.payload.session.user.userId;\nuser = user_temp.substring(user_temp.length-10, user_temp.length);\nnode.log(\"alexa user:\" + user);\n\n//check if new session, add \"initialize\" text on Launchrequest only\nvar launched=msg.payload.session.new;\nif (msg.payload.request.type ==\"LaunchRequest\") {\n    var temp_msg = \"Hi\";\n    launched=true;\n}\nelse {\n   var temp_msg = msg.payload.request.intent.slots.command.value; \n}\n\nnode.log(\"alexa utterance:\" + temp_msg);\n\n// set session values\nsession.context.temp = global.get(\"temp\") || \"-.-\";\nsession.context.hum = global.get(\"hum\") || \"-%\";\n\nvar params = session.context;\n\n// set params for the next conversation\nif (conversation) {\n    params = {\n        \"context\" : conversation.context\n    };\n    \n    params.context.cities = session.context.cities;\n    params.context.temp = session.context.temp;\n    params.context.colour = session.context.colour;\n    params.context.hum = session.context.hum;\n    params.context.city = session.context.city;\n    params.context.when = session.context.when;\n} \n\n// insert here the additional infos for the parm\n// session.city\n// session.temp\n// session.when\n// session.hum\n\n\nvar newmsg = temp_msg.replace(\"Frag Watson\", \"\");\nmsg.payload = newmsg;\n\nglobal.set(\"last_question\",newmsg);\n\n//params.workspace_id = workspace_id;\n\nvar additional_context = {\n    fname: fname\n};\n\n//reset context variables on new session\nif (launched)\n    additional_context = {\n    vorname : null,\n    groesse : null,\n    farbe : null,\n    marke : null,\n    fname: fname\n    };\n\n\n// save the new session params\nflow.set(\"session\", session);\n\n\nreturn {\n    payload: newmsg,\n    params : params,\n    session : session,\n    user : user,\n    additional_context : additional_context,\n    req : msg.req,\n    res : msg.res\n};", "outputs": 1, "noerr": 0, "x": 618, "y": 154.5555419921875, "wires": [
        ["d52c9434.a5e408", "ef3ef53b.2732d"]
    ] }, { "id": "881c1545.dad0d8", "type": "switch", "z": "ad6cefc7.a3ca5", "name": "Sort by Intent", "property": "payload.request.intent.name", "propertyType": "msg", "rules": [{ "t": "eq", "v": "CallWatson", "vt": "str" }, { "t": "eq", "v": "Fradulent_Trancation", "vt": "str" }, { "t": "else" }], "checkall": "true", "outputs": 3, "x": 452.333251953125, "y": 261.1111145019531, "wires": [
        ["ba9b3798.5c25e"],
        ["ba9b3798.5c25e"],
        []
    ] }, { "id": "d52c9434.a5e408", "type": "debug", "z": "ad6cefc7.a3ca5", "name": "CallConv", "active": true, "console": "false", "complete": "true", "x": 784.111083984375, "y": 93, "wires": [] }, { "id": "ef3ef53b.2732d", "type": "watson-conversation-v1", "z": "ad6cefc7.a3ca5", "name": "Frag Watson", "workspaceid": "03543a5d-b3cd-40b4-8406-86826a5ff4f2", "multiuser": true, "context": false, "default-endpoint": false, "service-endpoint": "", "x": 792.1666259765625, "y": 153.30557250976562, "wires": [
        ["2c94cb2a.9d2f6c", "16d914a8.0584ab"]
    ] }, { "id": "1fa0b36a.3576dd", "type": "function", "z": "ad6cefc7.a3ca5", "name": "Response Msg", "func": "// Create Alexa Answer  \n// var Watson_msg = msg.payload;\n\nvar Watson_msg = msg.payload;\n\nvar Watson_response = JSON.stringify(msg.session.output);\nnode.log(Watson_response);\n\nMyresponse = Watson_response.substring(2,Watson_response.length-2);\n\n// causing issues for multiple output responses\n//if (Myresponse.match(\"\\\",\\\"\")) {\nif (Myresponse.substring(0,Myresponse,2) == \"\\\",\\\"\") {\n     Myresponse = Myresponse.substring(3,Myresponse.length);\n     node.log(\"Found a comma\");\n     node.log(Myresponse);\n}\n\nMyresponse = Myresponse.replace(/\\\\/g, \"\");\nMyresponse = Myresponse.replace('=\\\"number\\\" format=\\\"telephone\\\"', '=\\\"digits\\\"');\n\nvar myquestion = global.get(\"last_question\");\nnode.log(\"last question:\"+ myquestion);\n\nvar myEndSession = false;    \n\n//on \"farewell\" intent request end session\nif (typeof msg.payload.intents !== 'undefined' && msg.payload.intents.length > 0)\nif(msg.payload.intents[0].hasOwnProperty('intent')) \n    if (msg.payload.intents[0].intent == \"finish\")\n        {myEndSession = true;}\n\n// build Alexa response\nvar response = {\n    version : \"1.0\",\n    response : { \n       outputSpeech : { \n          //type : \"PlainText\",\n          type : \"SSML\",\n          ssml: \"<speak>\" + Myresponse + \"</speak>\"\n        },        \n    shouldEndSession : myEndSession,\n    }\n};\n\nnode.log(JSON.stringify(response));\n\nvar newMsg = {payload: response};\nnewMsg.req  = msg.req;\nnewMsg.res = msg.res;\n\nreturn  newMsg;", "outputs": 1, "noerr": 0, "x": 227.6666259765625, "y": 980.5555725097656, "wires": [
        ["962d0984.aca468", "5decd32.c8cc22c"]
    ] }, { "id": "962d0984.aca468", "type": "http response", "z": "ad6cefc7.a3ca5", "name": "Alexa Response", "x": 422.44439697265625, "y": 902.6666917800903, "wires": [] }, { "id": "5decd32.c8cc22c", "type": "debug", "z": "ad6cefc7.a3ca5", "name": "AlexaResponse", "active": true, "console": "false", "complete": "true", "x": 423.77771759033203, "y": 1041.5555810928345, "wires": [] }, { "id": "2c94cb2a.9d2f6c", "type": "debug", "z": "ad6cefc7.a3ca5", "name": "ConvResult", "active": true, "console": "false", "complete": "true", "x": 990, "y": 90, "wires": [] }, { "id": "6e5b00b5.34e6c", "type": "debug", "z": "ad6cefc7.a3ca5", "name": "Alexa Request", "active": true, "console": "false", "complete": "true", "x": 302.5, "y": 97, "wires": [] }, { "id": "8566379f.f21038", "type": "function", "z": "ad6cefc7.a3ca5", "name": "Initalize", "func": "// insert the supported cities\nvar latlong = [];\nvar cities = [];\nvar conv;\n\nlatlong.push ({ \"city\" : \"Linz\", \"latlong\": \"48.2950649,14.0527468\" });\nlatlong.push ({ \"city\": \"Wien\", \"latlong\": \"48.2206849,16.3800599\"});\nlatlong.push ({ \"city\": \"Vienna\", \"latlong\": \"48.2206849,16.3800599\"});\nlatlong.push ({ \"city\": \"Graz\", \"latlong\": \"47.0735897,15.4417898\"});\nlatlong.push ({ \"city\": \"Salzburg\", \"latlong\": \"47.80281,13.05643\"});\nlatlong.push ({ \"city\": \"Bregenz\", \"latlong\": \"47.50708,9.7519903\"});\nlatlong.push ({ \"city\": \"Innsbruck\", \"latlong\": \"47.2854551,11.37879\"});\nlatlong.push ({ \"city\": \"Klagenfurt\", \"latlong\": \"46.641325,14.312755\"});\nlatlong.push ({ \"city\": \"St. Pölten\",\"latlong\": \"48.19378,15.647015\"});\nlatlong.push ({ \"city\": \"Eisenstadt\",\"latlong\": \"47.838855,16.5343751\"});\nlatlong.push ({ \"city\": \"München\",\"latlong\": \"48.135125,11.581981\"});\nlatlong.push ({ \"city\": \"Berlin\",\"latlong\": \"52.520007,13.404954\"});\nlatlong.push ({ \"city\": \"Hamburg\",\"latlong\": \"53.551085,9.993682\"});\n\nfor (var i=0; i<latlong.length; i++) {\n    cities.push(latlong[i].city);\n}\n\n// new session params \nvar session = {\n    \"latlong\" : latlong, \n    \"cities\" : cities,\n    \"action\" : \"\",\n    \"output\" : \"\",\n    \"context\" : {\n        \"cities\" : cities,\n        \"temp\" : \"-.-\",\n        \"hum\" : \"-%\", \n        \"city\" : null,\n        \"when\" : null,\n        \"date\" : null, \n        \"day\" : null,\n        \"light\" : null,\n        \"colour\" : null\n    }\n}\n\n// save the session\nflow.set(\"conversation\", conv);\nflow.set(\"session\", session);\n\nreturn msg;\n", "outputs": 1, "noerr": 0, "x": 494, "y": 115.75, "wires": [
        ["ba9b3798.5c25e", "6616fc94.ef0604"]
    ] }, { "id": "4a29c77a.34e31", "type": "switch", "z": "ad6cefc7.a3ca5", "name": "", "property": "session.action", "propertyType": "flow", "rules": [{ "t": "eq", "v": "greeting", "vt": "str" }, { "t": "eq", "v": "turn_off", "vt": "str" }, { "t": "eq", "v": "turn_on", "vt": "str" }, { "t": "eq", "v": "get_hum", "vt": "str" }, { "t": "eq", "v": "get_temp", "vt": "str" }, { "t": "eq", "v": "discover", "vt": "str" }, { "t": "eq", "v": "get_weather", "vt": "str" }, { "t": "else" }], "checkall": "true", "outputs": 8, "x": 364, "y": 476, "wires": [
        ["ae25a47.4e756d8", "39ee5d86.df1caa"],
        ["5cdbb64e.4a2288"],
        ["5cdbb64e.4a2288"],
        ["ae25a47.4e756d8"],
        ["ae25a47.4e756d8"],
        ["ae25a47.4e756d8"],
        ["6d69715.2478d1"],
        ["ae25a47.4e756d8"]
    ] }, { "id": "719cb7fe.d4643", "type": "function", "z": "ad6cefc7.a3ca5", "name": "Parse Conv", "func": "// get the current session\nvar session = flow.get(\"session\");\nvar lang = \"de\";\n\n// save conversation\nflow.set(\"conversation\", msg.payload);\n\n// save output textmessages\nsession.output = msg.payload.output.text;\n\n// init working variables\nvar intent;\nif (msg.payload.intents && msg.payload.intents.length) {\n    intent = msg.payload.intents[0].intent;\n} else {\n    intent = \"\";\n}\nvar entities = msg.payload.entities;\n\n// save special context\n// msg.discover = msg.payload.context.discovery;\n\n// parse entities and set vars\nif (entities && entities.length){\n    for (var i = 0;i < entities.length;i++) {\n        switch (entities[i].entity) {\n            case \"city\":\n                intent = \"get_weather\";\n                session.context.city = entities[i].value;\n                break;\n            case \"sys-date\":\n                intent = \"get_weather\";\n                session.context.date = entities[i].value;\n                break;\n            case \"day\":\n                intent = \"get_weather\";\n                session.context.day = entities[i].value;\n                break;\n            case \"colour\":\n                intent = \"turn_on\";\n                session.context.colour = entities[i].value;\n                break;\n            default:\n                break;\n        }\n    }\n}\n\n// define aditional values\nswitch (intent) {\n    case \"greeting\":\n        session.action = \"greeting\";\n        break;\n    case \"finish\":\n        session.action = \"finish\";\n        break;\n    case \"turn_off\":\n        session.action = \"turn_off\";\n        break;\n    case \"turn_on\":\n        if (session.context.colour && session.context.colour !== \"\") {\n            session.action = \"turn_on\";\n        } else {\n            session.action = \"next_question\";\n        }\n        break;\n    case \"get_temp\":\n        session.action = \"get_temp\";\n        break;\n    case \"get_hum\":\n        session.action = \"get_hum\";\n        break;\n    case \"get_weather\":\n        if (session.context.city) {\n            if (session.context.day || session.context.date) {\n            session.action = \"get_weather\";\n            } else {\n            session.action = \"next_question\";\n            }\n        } else {\n            session.action = \"next_question\";\n        }\n        break;\n    default:\n        break;\n}\n\nflow.set(\"session\", session);\n\n// enhance msg object\nmsg.intent = intent;\nmsg.session = session;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 188, "y": 475.75, "wires": [
        ["4a29c77a.34e31", "736f13e0.6fb19c"]
    ] }, { "id": "16d914a8.0584ab", "type": "link out", "z": "ad6cefc7.a3ca5", "name": "", "links": ["c77cf453.214fc8"], "x": 942, "y": 154.5, "wires": [] }, { "id": "c77cf453.214fc8", "type": "link in", "z": "ad6cefc7.a3ca5", "name": "Alexa Action", "links": ["16d914a8.0584ab"], "x": 71, "y": 476.25, "wires": [
        ["719cb7fe.d4643"]
    ] }, { "id": "ac23f843.86a31", "type": "link in", "z": "ad6cefc7.a3ca5", "name": "Alexa Reponse", "links": ["ae25a47.4e756d8", "fd779f3e.e724b", "54e86ad8.a29c44"], "x": 66, "y": 981.25, "wires": [
        ["1fa0b36a.3576dd"]
    ] }, { "id": "8ac7f8d9.64c8f", "type": "ibmiot out", "z": "ad6cefc7.a3ca5", "authentication": "boundService", "apiKey": "", "outputType": "cmd", "deviceId": "TjBot", "deviceType": "TjBot", "eventCommandType": "set-light", "format": "json", "data": "{}", "qos": 0, "name": "IBM IoT", "service": "registered", "x": 427, "y": 606.75, "wires": [] }, { "id": "4ccf80fd.16d948", "type": "function", "z": "ad6cefc7.a3ca5", "name": "IoT Command", "func": "var session = flow.get(\"session\");\nvar IoTMsg = {\n    \"lang\" : flow.get(\"lang\"),\n    \"action\" : \"\",\n    \"colour\" : \"\"\n};\n\nswitch (session.action) {\n    case \"turn_off\":\n        IoTMsg.action = \"light_off\";\n        break;\n    case \"turn_on\":\n        IoTMsg.action = \"light_on\";\n        var colour = session.context.colour;\n        switch (colour) {\n            case \"blue\":\n            case \"blau\":\n                IoTMsg.colour = \"blue_light\";\n                break;\n            case \"red\":\n            case \"rot\":\n                IoTMsg.colour = \"red_light\";\n                break;\n            case \"green\":\n            case \"grün\":\n                IoTMsg.colour = \"green_light\";\n                break;\n            case \"yellow\":\n            case \"gelb\":\n                IoTMsg.colour = \"yellow_light\";\n                break;\n            case \"white\":\n            case \"weiß\":\n                IoTMsg.colour = \"white_light\";\n                break;\n            case \"orange\":\n                IoTMsg.colour = \"orange_light\";\n                break;\n            default: \n                IoTMsg.colour = \"no_light\";\n                break;\n        }\n        break;\n    default: \n        IoTMsg.action = \"light_off\";\n        IoTMsg.colour = \"no_light\";\n        break;\n}\n\nvar d = {\n    \"d\" : IoTMsg\n};\n\nmsg.payload = d;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 221, "y": 635.75, "wires": [
        ["2e511d6d.71ffda", "8ac7f8d9.64c8f"]
    ] }, { "id": "2e511d6d.71ffda", "type": "debug", "z": "ad6cefc7.a3ca5", "name": "Light_Command", "active": true, "console": "false", "complete": "true", "x": 458, "y": 654.75, "wires": [] }, { "id": "62dbc17b.47af68", "type": "link in", "z": "ad6cefc7.a3ca5", "name": "Alexa IoT Light", "links": ["5cdbb64e.4a2288"], "x": 75, "y": 600, "wires": [
        ["4ccf80fd.16d948", "fd779f3e.e724b"]
    ] }, { "id": "5cdbb64e.4a2288", "type": "link out", "z": "ad6cefc7.a3ca5", "name": "", "links": ["62dbc17b.47af68"], "x": 491, "y": 459.5, "wires": [] }, { "id": "fd779f3e.e724b", "type": "link out", "z": "ad6cefc7.a3ca5", "name": "", "links": ["ac23f843.86a31"], "x": 225, "y": 600.75, "wires": [] }, { "id": "ae25a47.4e756d8", "type": "link out", "z": "ad6cefc7.a3ca5", "name": "Alexa Response", "links": ["ac23f843.86a31"], "x": 704, "y": 458.5, "wires": [] }, { "id": "736f13e0.6fb19c", "type": "debug", "z": "ad6cefc7.a3ca5", "name": "ParseConv", "active": true, "console": "false", "complete": "true", "x": 379, "y": 376.5, "wires": [] }, { "id": "39ee5d86.df1caa", "type": "function", "z": "ad6cefc7.a3ca5", "name": "reset", "func": "var session = flow.get(\"session\");\n\nsession.context.city = null;\nsession.context.colour = null;\nsession.context.day = null;\nsession.context.date = null;\n\nflow.set(\"session\", session);\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 548, "y": 423, "wires": [
        ["ae25a47.4e756d8"]
    ] }, { "id": "4df569a5.3d7698", "type": "function", "z": "ad6cefc7.a3ca5", "name": "Get LatLong", "func": "var latlong;\nvar session = flow.get(\"session\");\n\nmsg.oldpayload = msg.payload;\n\nmsg.weather=false;\nfor (var v in session.latlong) {\n    if (session.latlong[v].city.toUpperCase() === session.context.city.toUpperCase()) {\n        latlong = session.latlong[v].latlong;\n        msg.weather = true;\n    }\n}\n\nmsg.language = \"de\";\nmsg.location = latlong;\nmsg.payload = latlong;\n\nreturn msg;", "outputs": "1", "noerr": 0, "x": 212.5, "y": 775.75, "wires": [
        ["192eb6c6.8807b9", "14dfb490.4a48f3"]
    ] }, { "id": "192eb6c6.8807b9", "type": "debug", "z": "ad6cefc7.a3ca5", "name": "", "active": true, "console": "false", "complete": "false", "x": 422.5, "y": 726.75, "wires": [] }, { "id": "14dfb490.4a48f3", "type": "switch", "z": "ad6cefc7.a3ca5", "name": "Weather?", "property": "weather", "propertyType": "msg", "rules": [{ "t": "false" }, { "t": "true" }], "checkall": "true", "outputs": 2, "x": 414.5, "y": 775.75, "wires": [
        ["dd574b9c.ea37c8"],
        ["3ca164d.6e8f49c"]
    ] }, { "id": "dd574b9c.ea37c8", "type": "function", "z": "ad6cefc7.a3ca5", "name": "Restore", "func": "msg.payload = msg.oldpayload;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 605.5, "y": 768.75, "wires": [
        ["54e86ad8.a29c44"]
    ] }, { "id": "3ca164d.6e8f49c", "type": "weather_insights", "z": "ad6cefc7.a3ca5", "name": "Forecast", "host": "twcservice.mybluemix.net", "service": "/forecast/daily/10day.json", "geocode": "", "units": "m", "language": "", "x": 471.5, "y": 836.75, "wires": [
        ["6bcadd0f.c74024"]
    ] }, { "id": "6bcadd0f.c74024", "type": "function", "z": "ad6cefc7.a3ca5", "name": "Parse Weather", "func": "var session = flow.get(\"session\");\nvar lang = \"de\";\nvar weatherpayload = msg.payload;\nvar weathertext = \"\";\nvar code;\nvar weather = msg.forecasts;\n\n\nif (lang == \"en\") { \n    msg.voice = \"en-GB_KateVoice\";\n    weathertext = \"The Weather in \";\n    weathertext = weathertext + session.context.city + \" will be on \";\n}\nif (lang == \"de\") { \n    msg.voice = \"de-DE_BirgitVoice\";\n    weathertext = \"Das Wetter in \";\n    weathertext = weathertext + session.context.city + \" wird am \";\n}\n\nif (weather.length > 0 ) {\n    var notfound = true;\n    var i = 0;\n    while (i< weather.length && notfound) {\n        if(weather[i].fcst_valid_local.substring(0,10) == session.context.date) {\n            notfound = false;\n        } else {\n            i = i + 1;\n        }\n    }\n    \n    if (notfound) {\n        i = 0;\n    }\n    var narrative = weather[i].narrative; \n    var dow = weather[i].dow;\n    weathertext = weathertext + dow + \" \" + narrative;\n    if (typeof weather[i].day !== \"undefined\") {\n        code = weather[i].day.icon_code;\n    } else if (typeof weather[i].night !== \"undefined\") {\n        code = weather[i].night.icon_code;\n    }\n} else {\n    weathertext = \"No Weather found!\";\n}\n\n// Test RegEx\nvar newweather = weathertext;\nvar reg = weathertext.match(/(?:\\d*\\.)?\\d+([A-C])/g);\nfor (var v=0; v < reg.length; v++) {\n    var str = \"\";\n    if (lang == \"de\") {\n        str = reg[v].slice(0,reg[v].length-1) + \" Grad\";\n    } else {\n        str = reg[v].slice(0,reg[v].length-1) + \" degrees\";\n    }\n    newweather = newweather.replace(reg[v],str);\n}\n\n// save to context\nsession.context.weathertext = newweather;\nsession.context.weathercode = code;\nsession.output.push(newweather);\n\nmsg.additional_context = {\n//    context : {\n        weather : weathertext,\n        uv : msg.forecasts[0].uv_desc,\n        temp : msg.forecasts[0].temp\n//    }\n};\n\nflow.set(\"session\", session);\n\n// restore old payload elements\nmsg.payload = msg.oldpayload;\nmsg.session = session;\nmsg.forecasts = weather;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 656.5, "y": 836.75, "wires": [
        ["e198be8d.3d8668", "ee973d06.639078", "54e86ad8.a29c44"]
    ] }, { "id": "e198be8d.3d8668", "type": "debug", "z": "ad6cefc7.a3ca5", "name": "Weather out", "active": true, "console": "false", "complete": "true", "x": 861, "y": 836.25, "wires": [] }, { "id": "ee973d06.639078", "type": "function", "z": "ad6cefc7.a3ca5", "name": "IoT Command", "func": "var session = flow.get(\"session\");\n\nvar IoTMsg = {\n    \"lang\" : flow.get(\"lang\"),\n    \"action\" : \"talk\",\n    \"weathercode\" : session.context.weathercode,\n    \"text\" : session.context.weathertext\n};\n\n\nvar d = {\n    \"d\" : IoTMsg\n};\n\nmsg.payload = d;\n\nreturn msg;", "outputs": 1, "noerr": 0, "x": 861, "y": 889.75, "wires": [
        ["46b05f3e.1a393", "e51d47f0.4e6ab8"]
    ] }, { "id": "46b05f3e.1a393", "type": "debug", "z": "ad6cefc7.a3ca5", "name": "Talk_Command", "active": true, "console": "false", "complete": "true", "x": 1078, "y": 946.75, "wires": [] }, { "id": "e51d47f0.4e6ab8", "type": "ibmiot out", "z": "ad6cefc7.a3ca5", "authentication": "boundService", "apiKey": "", "outputType": "cmd", "deviceId": "TjBot", "deviceType": "TjBot", "eventCommandType": "talk", "format": "json", "data": "{}", "qos": 0, "name": "IBM IoT", "service": "registered", "x": 1057, "y": 889.75, "wires": [] }, { "id": "ac9b5f4c.f8a83", "type": "link in", "z": "ad6cefc7.a3ca5", "name": "Alexa Weather", "links": ["6d69715.2478d1"], "x": 71, "y": 774.25, "wires": [
        ["4df569a5.3d7698"]
    ] }, { "id": "54e86ad8.a29c44", "type": "link out", "z": "ad6cefc7.a3ca5", "name": "", "links": ["ac23f843.86a31"], "x": 781, "y": 767.5, "wires": [] }, { "id": "6d69715.2478d1", "type": "link out", "z": "ad6cefc7.a3ca5", "name": "", "links": ["ac9b5f4c.f8a83"], "x": 678, "y": 526.5, "wires": [] }, { "id": "6616fc94.ef0604", "type": "debug", "z": "ad6cefc7.a3ca5", "name": "Init", "active": true, "console": "false", "complete": "true", "x": 582, "y": 51.5, "wires": [] }]